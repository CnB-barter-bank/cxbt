/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  CXBTokenPurchase,
  CXBTokenPurchaseInterface,
} from "../../../contracts/management/CXBTokenPurchase";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_chainlink",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_native",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bonus",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initialAuthority",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "AccessManagedInvalidAuthority",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "delay",
        type: "uint32",
      },
    ],
    name: "AccessManagedRequiredDelay",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AccessManagedUnauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "BadReferrer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CannotMakeTransfers",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "CannotTransfer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CannotWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyChainLink",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyCurrency",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyNativeRate",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyNewToken",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyRate",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyToken",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyValue",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "EnumerableMapNonexistentKey",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectPosition",
    type: "error",
  },
  {
    inputs: [],
    name: "LowRate",
    type: "error",
  },
  {
    inputs: [],
    name: "NoBuyerProvided",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "NotOwned",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "TooBigRate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnsufficientPurchaseBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ZeroAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BoughtTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "referral",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cashAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "ReferralsProvided",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ratePos",
        type: "uint256",
      },
    ],
    name: "at",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bonus",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "referral",
        type: "address",
      },
    ],
    name: "buy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "referral",
        type: "address",
      },
    ],
    name: "buy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "calculateAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cashPercent",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainLinkInterface",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "clean",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "referral",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "hasRate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isConsumingScheduledOp",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "length",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_bonus",
        type: "uint8",
      },
    ],
    name: "setBonus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "percent",
        type: "uint8",
      },
    ],
    name: "setCashPercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_chainlink",
        type: "address",
      },
    ],
    name: "setChainLinkInterface",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_native",
        type: "uint256",
      },
    ],
    name: "setNativeRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
    ],
    name: "setRate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "percent",
        type: "uint8",
      },
    ],
    name: "setTokenPercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vesting",
        type: "address",
      },
    ],
    name: "setVesting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenPercent",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vesting",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260405162002af838038062002af8833981016040819052620000269162000127565b8085858585816000036200004d5760405163200b3d2560e01b815260040160405180910390fd5b6200005a81606462000185565b60035550600080546001600160a01b039485166001600160a01b03199182161790915560028054939094169216919091179091556006556200009c81620000b6565b5050600c805460ff60a81b1916905550620001ad92505050565b600c80546001600160a01b0319166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150565b80516001600160a01b03811681146200012257600080fd5b919050565b600080600080600060a086880312156200014057600080fd5b6200014b866200010a565b94506200015b602087016200010a565b9350604086015192506060860151915062000179608087016200010a565b90509295509295909350565b80820180821115620001a757634e487b7160e01b600052601160045260246000fd5b92915050565b61293b80620001bd6000396000f3fe6080604052600436106102195760003560e01c80637622b8581161011d578063db61c76e116100b0578063e6ed47461161007f578063f940e38511610064578063f940e385146105fd578063fc0c546a1461061d578063fcfe30f51461063b57600080fd5b8063e6ed4746146105ca578063f340fa01146105ea57600080fd5b8063db61c76e14610536578063df50af8814610556578063e0781b7a1461056b578063e0886f901461058b57600080fd5b80638fb36037116100ec5780638fb36037146104c2578063afe14c19146104f0578063bf7e214f14610510578063d0e30db01461052e57600080fd5b80637622b8581461046357806379856671146104785780637a9e5e4b1461048d5780638456cb59146104ad57600080fd5b80632f720a15116101b05780635c975abb1161017f5780636f6ff3bc116101645780636f6ff3bc146103fc57806370a082311461041c57806375b4d78c1461043c57600080fd5b80635c975abb146103bd5780636e445857146103dc57600080fd5b80632f720a151461034a5780633f4ba83a1461036a57806344c63eec1461037f57806351cff8d91461039d57600080fd5b80631f7b6d32116101ec5780631f7b6d32146102d5578063286bcc80146102ea57806329550f971461030a5780632bdb70971461032a57600080fd5b80630ba9d8ca1461021e57806310c729e814610251578063144fa6d7146102815780631cd7f8f8146102a3575b600080fd5b34801561022a57600080fd5b5061023e6102393660046124b3565b61065b565b6040519081526020015b60405180910390f35b34801561025d57600080fd5b5061027161026c3660046124d0565b6106ac565b6040519015158152602001610248565b34801561028d57600080fd5b506102a161029c3660046124b3565b6106d2565b005b3480156102af57600080fd5b506002546001600160a01b03165b6040516001600160a01b039091168152602001610248565b3480156102e157600080fd5b5061023e6106eb565b3480156102f657600080fd5b506102a1610305366004612523565b6106fc565b34801561031657600080fd5b5061023e61032536600461253c565b61070e565b34801561033657600080fd5b5061027161034536600461253c565b610721565b34801561035657600080fd5b506102a1610365366004612577565b610736565b34801561037657600080fd5b506102a161074b565b34801561038b57600080fd5b506001546001600160a01b03166102bd565b3480156103a957600080fd5b506102a16103b83660046124b3565b61075e565b3480156103c957600080fd5b50600c54600160a81b900460ff16610271565b3480156103e857600080fd5b506102a16103f7366004612577565b610776565b34801561040857600080fd5b506102a16104173660046124b3565b61078b565b34801561042857600080fd5b5061023e6104373660046124b3565b6107b2565b34801561044857600080fd5b50610451610891565b60405160ff9091168152602001610248565b34801561046f57600080fd5b50600554610451565b34801561048457600080fd5b5060065461023e565b34801561049957600080fd5b506102a16104a83660046124b3565b6108a2565b3480156104b957600080fd5b506102a1610921565b3480156104ce57600080fd5b506104d7610932565b6040516001600160e01b03199091168152602001610248565b3480156104fc57600080fd5b506102a161050b366004612594565b610958565b34801561051c57600080fd5b50600c546001600160a01b03166102bd565b6102a161096b565b34801561054257600080fd5b506102716105513660046125cd565b610989565b34801561056257600080fd5b50600454610451565b34801561057757600080fd5b506102716105863660046124b3565b6109ae565b34801561059757600080fd5b506105ab6105a6366004612523565b6109e2565b604080516001600160a01b039093168352602083019190915201610248565b3480156105d657600080fd5b506102a16105e5366004612577565b610a22565b6102a16105f83660046124b3565b610a34565b34801561060957600080fd5b506102a1610618366004612594565b610a56565b34801561062957600080fd5b506000546001600160a01b03166102bd565b34801561064757600080fd5b506102a16106563660046124b3565b610a69565b60006001600160a01b03821661068457604051630560d24960e11b815260040160405180910390fd5b61068f600783610a7b565b61069b57506000919050565b6106a6600783610a90565b92915050565b6000806106b98585610aa5565b90506106c88686868487610c1f565b9695505050505050565b6106df335b6000366116f8565b6106e8816117f8565b50565b60006106f76007611841565b905090565b610705336106d7565b6106e88161184c565b600061071a8383610aa5565b9392505050565b600061072c336106d7565b61071a8383611872565b61073f336106d7565b6106e88160ff16600455565b610754336106d7565b61075c61199f565b565b610767336106d7565b47156106e8576106e8816119f4565b61077f336106d7565b6106e88160ff16600555565b610794336106d7565b600180546001600160a01b0319166001600160a01b03831617905550565b60405163703c0dbd60e11b81526001600160a01b0382166004820152600090309063e0781b7a90602401602060405180830381865afa1580156107f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081d9190612624565b61082957506000919050565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa15801561086d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a6919061263f565b600060646003546106f7919061266e565b600c5433906001600160a01b031681146108de5760405162d1953b60e31b81526001600160a01b03821660048201526024015b60405180910390fd5b816001600160a01b03163b600003610914576040516361798f2f60e11b81526001600160a01b03831660048201526024016108d5565b61091d82611a81565b5050565b61092a336106d7565b61075c611ad5565b600c54600090600160a01b900460ff1661094c5750600090565b50638fb3603760e01b90565b610961336106d7565b61091d8282611b18565b6000610978600034610aa5565b905061091d33600034846000610c1f565b6000806109968585610aa5565b90506109a53386868487610c1f565b95945050505050565b60006001600160a01b0382166109d757604051630560d24960e11b815260040160405180910390fd5b6106a6600783610a7b565b6000806109ef6007611841565b8310610a0e5760405163188da0b360e21b815260040160405180910390fd5b610a19600784611e42565b91509150915091565b610a2b336106d7565b6106e881611e5e565b6000610a41600034610aa5565b9050610a51336000348486610c1f565b505050565b610a5f336106d7565b61091d8282611e72565b610a72336106d7565b6106e881611ff6565b600061071a836001600160a01b03841661203f565b600061071a836001600160a01b03841661204b565b60006001600160a01b038316610ac557610abe82612092565b90506106a6565b81600003610ae657604051631208b21b60e01b815260040160405180910390fd5b6000546001600160a01b0316610b0f5760405163066f53b160e01b815260040160405180910390fd5b6000836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b739190612681565b610b7e90600261269e565b6040516305d4ec6560e11b81526001600160a01b038616600482015260ff9190911691506000903090630ba9d8ca90602401602060405180830381865afa158015610bcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf1919061263f565b9050610bfe82600a61279b565b600354610c0b86846127a7565b610c1591906127a7565b6109a591906127be565b60006001600160a01b038616610c4857604051635ec1f37960e01b815260040160405180910390fd5b816001600160a01b0316866001600160a01b031603610c7a576040516324da60a760e21b815260040160405180910390fd5b82600003610cad57604051632a3fd1cb60e01b81526001600160a01b0386166004820152602481018590526044016108d5565b6001600160a01b03851615610d70576040516370a0823160e01b81526001600160a01b038781166004830152600091908716906370a0823190602401602060405180830381865afa158015610d06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2a919061263f565b905084811015610d6e576040516321d6041b60e01b81526001600160a01b0380891660048301528716602482015260448101829052606481018690526084016108d5565b505b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610db9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddd919061263f565b905083811015610e035760405163014ab18560e11b8152600481018590526024016108d5565b60006001600160a01b03841615801590610e1f57506000600454115b156110a357606460045487610e3491906127a7565b610e3e91906127be565b90506001600160a01b038716610ee1576000846001600160a01b03168260405160006040518083038185875af1925050503d8060008114610e9b576040519150601f19603f3d011682016040523d82523d6000602084013e610ea0565b606091505b5050905080610edb57604051631bc3cdfd60e21b8152600060048201526001600160a01b0386166024820152604481018390526064016108d5565b50611168565b6040516323b872dd60e01b81526001600160a01b038981166004830152306024830152604482018890528816906323b872dd906064016020604051808303816000875af1158015610f36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5a9190612624565b610f9757604051631667981f60e01b81526001600160a01b03808a16600483015230602483015288166044820152606481018790526084016108d5565b60405163a9059cbb60e01b81526001600160a01b0385811660048301526024820183905288169063a9059cbb906044016020604051808303816000875af1158015610fe6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100a9190612624565b61104757604051631667981f60e01b81523060048201526001600160a01b03808616602483015288166044820152606481018290526084016108d5565b6001600160a01b038085166000908152600a60209081526040808320938b16835292905220546110789082906127e0565b6001600160a01b038086166000908152600a60209081526040808320938c1683529290522055611168565b6001600160a01b03871615611168576040516323b872dd60e01b81526001600160a01b038981166004830152306024830152604482018890528816906323b872dd906064016020604051808303816000875af1158015611107573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112b9190612624565b61116857604051631667981f60e01b81526001600160a01b03808a16600483015230602483015288166044820152606481018790526084016108d5565b60006001600160a01b0385161580159061118457506000600554115b156112a25760008054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fe9190612681565b61120990600261269e565b61121490600a6127f3565b6005546040516305d4ec6560e11b81526001600160a01b038b16600482015289903090630ba9d8ca90602401602060405180830381865afa15801561125d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611281919061263f565b61128b91906127a7565b61129591906127a7565b61129f91906127be565b90505b6001546001600160a01b031661146b5760005460405163a9059cbb60e01b81526001600160a01b038b81166004830152602482018990529091169063a9059cbb906044016020604051808303816000875af1158015611305573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113299190612624565b61136a57600054604051631667981f60e01b81523060048201526001600160a01b03808c1660248301529091166044820152606481018790526084016108d5565b80156114665760005460405163a9059cbb60e01b81526001600160a01b038781166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af11580156113c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e79190612624565b61142857600054604051631667981f60e01b81523060048201526001600160a01b0380881660248301529091166044820152606481018290526084016108d5565b6001600160a01b0385166000908152600b602052604090205461144c9082906127e0565b6001600160a01b0386166000908152600b60205260409020555b611632565b6000546001546001600160a01b039182169163a9059cbb911661148e848a6127e0565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156114d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114fd9190612624565b61155c5760015460005430916001600160a01b039081169116611520848a6127e0565b604051631667981f60e01b81526001600160a01b03948516600482015292841660248401529216604482015260648101919091526084016108d5565b600154604051631f72642160e31b81526001600160a01b038b81166004830152602482018990529091169063fb93210890604401600060405180830381600087803b1580156115aa57600080fd5b505af11580156115be573d6000803e3d6000fd5b50505050600081111561163257600154604051631f72642160e31b81526001600160a01b038781166004830152602482018490529091169063fb93210890604401600060405180830381600087803b15801561161957600080fd5b505af115801561162d573d6000803e3d6000fd5b505050505b60008211806116415750600081115b1561169b5760408051888152602081018490529081018290526001600160a01b03808a1691878216918c16907fcc73881edfa10ebe0b193c9634f7b693ee798ba7a11076b56f697522a890db8f9060600160405180910390a45b86886001600160a01b03168a6001600160a01b03167f314898f27b62de59a1d7326707c74b7991036f43ed22658d064228c032e76fda896040516116e191815260200190565b60405180910390a450600198975050505050505050565b60008061172e611710600c546001600160a01b031690565b863061172060046000898b612802565b6117299161282c565b61220c565b91509150816117f15763ffffffff8116156117ce57600c805460ff60a01b198116600160a01b17909155604051634a63ebf760e11b81526001600160a01b03909116906394c7d7ee906117899088908890889060040161285c565b600060405180830381600087803b1580156117a357600080fd5b505af11580156117b7573d6000803e3d6000fd5b5050600c805460ff60a01b19169055506117f19050565b60405162d1953b60e31b81526001600160a01b03861660048201526024016108d5565b5050505050565b6001600160a01b03811661181f5760405163066f53b160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006106a68261232d565b8060000361186d5760405163200b3d2560e01b815260040160405180910390fd5b600655565b60006001600160a01b03831661189b57604051630560d24960e11b815260040160405180910390fd5b816000036118bc5760405163783bc40960e01b815260040160405180910390fd5b6000546001600160a01b03166118e55760405163066f53b160e01b815260040160405180910390fd5b60008054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611936573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061195a9190612681565b61196590600261269e565b61197090600a6127f3565b82111561199357604051630164b7c960e61b8152600481018390526024016108d5565b61071a60078484612338565b6119a761234e565b600c805460ff60a81b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60405147906000906001600160a01b0384169083908381818185875af1925050503d8060008114611a41576040519150601f19603f3d011682016040523d82523d6000602084013e611a46565b606091505b5050905080610a5157604051631bc3cdfd60e21b8152600060048201526001600160a01b0384166024820152604481018390526064016108d5565b600c80546001600160a01b0319166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150565b611add612378565b600c805460ff60a81b1916600160a81b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119d73390565b6000546001600160a01b0316611b415760405163066f53b160e01b815260040160405180910390fd5b6000546040516370a0823160e01b81523060048201526001600160a01b039091169063a9059cbb90839083906370a0823190602401602060405180830381865afa158015611b93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb7919061263f565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611c02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c269190612624565b611c525760005460405163bbea11c960e01b81526001600160a01b0390911660048201526024016108d5565b6000805b611c606007611841565b821015611dad576000611c74600784611e42565b506040516370a0823160e01b81523060048201529091506001600160a01b038216906370a0823190602401602060405180830381865afa158015611cbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce0919061263f565b9150600082118015611d62575060405163a9059cbb60e01b81526001600160a01b0386811660048301526024820184905282169063a9059cbb906044016020604051808303816000875af1158015611d3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d609190612624565b155b15611d9a57604051631bc3cdfd60e21b81526001600160a01b03808316600483015286166024820152604481018390526064016108d5565b5081611da58161289b565b925050611c56565b60405147906000906001600160a01b0387169083908381818185875af1925050503d8060008114611dfa576040519150601f19603f3d011682016040523d82523d6000602084013e611dff565b606091505b5050905080611e3a57604051631bc3cdfd60e21b8152600060048201526001600160a01b0387166024820152604481018390526064016108d5565b505050505050565b6000808080611e5186866123a3565b9097909650945050505050565b611e6c60ff821660646127e0565b60035550565b6040516370a0823160e01b81523060048201526001600160a01b0383169063a9059cbb90839083906370a0823190602401602060405180830381865afa158015611ec0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee4919061263f565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611f2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f539190612624565b61091d576040516370a0823160e01b8152306004820152829082906001600160a01b038316906370a0823190602401602060405180830381865afa158015611f9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc3919061263f565b604051631bc3cdfd60e21b81526001600160a01b03938416600482015292909116602483015260448201526064016108d5565b6001600160a01b03811661201d5760405163340d80df60e21b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600061071a83836123ce565b600081815260028301602052604081205480158015612071575061206f848461203f565b155b1561071a5760405163015ab34360e11b8152600481018490526024016108d5565b6002546000906001600160a01b03166120be5760405163340d80df60e21b815260040160405180910390fd5b6002546040805163313ce56760e01b815290516000926001600160a01b03169163313ce5679160048083019260209291908290030181865afa158015612108573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061212c9190612681565b61213790600261269e565b60ff1690506000600260009054906101000a90046001600160a01b03166001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612191573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b5919061263f565b9050600081136121d857604051636dcc7b7360e01b815260040160405180910390fd5b6121e382600a61279b565b6003546121f086846127a7565b6121fa91906127a7565b61220491906127be565b949350505050565b6040516001600160a01b03848116602483015283811660448301526001600160e01b03198316606483015260009182918291829189169060840160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663b700961360e01b1790525161229091906128b4565b600060405180830381855afa9150503d80600081146122cb576040519150601f19603f3d011682016040523d82523d6000602084013e6122d0565b606091505b5091509150811561232257604081511061230257808060200190518101906122f891906128e3565b9094509250612322565b6020815110612322578080602001905181019061231f9190612624565b93505b505094509492505050565b60006106a6826123e6565b6000612204846001600160a01b038516846123f0565b600c54600160a81b900460ff1661075c57604051638dfc202b60e01b815260040160405180910390fd5b600c54600160a81b900460ff161561075c5760405163d93c066560e01b815260040160405180910390fd5b600080806123b1858561240d565b600081815260029690960160205260409095205494959350505050565b6000818152600183016020526040812054151561071a565b60006106a6825490565b600082815260028401602052604081208290556122048484612419565b600061071a8383612425565b600061071a838361244f565b600082600001828154811061243c5761243c612918565b9060005260206000200154905092915050565b6000818152600183016020526040812054612496575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556106a6565b5060006106a6565b6001600160a01b03811681146106e857600080fd5b6000602082840312156124c557600080fd5b813561071a8161249e565b600080600080608085870312156124e657600080fd5b84356124f18161249e565b935060208501356125018161249e565b92506040850135915060608501356125188161249e565b939692955090935050565b60006020828403121561253557600080fd5b5035919050565b6000806040838503121561254f57600080fd5b823561255a8161249e565b946020939093013593505050565b60ff811681146106e857600080fd5b60006020828403121561258957600080fd5b813561071a81612568565b600080604083850312156125a757600080fd5b82356125b28161249e565b915060208301356125c28161249e565b809150509250929050565b6000806000606084860312156125e257600080fd5b83356125ed8161249e565b92506020840135915060408401356126048161249e565b809150509250925092565b8051801515811461261f57600080fd5b919050565b60006020828403121561263657600080fd5b61071a8261260f565b60006020828403121561265157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156106a6576106a6612658565b60006020828403121561269357600080fd5b815161071a81612568565b60ff81811683821601908111156106a6576106a6612658565b600181815b808511156126f25781600019048211156126d8576126d8612658565b808516156126e557918102915b93841c93908002906126bc565b509250929050565b600082612709575060016106a6565b81612716575060006106a6565b816001811461272c576002811461273657612752565b60019150506106a6565b60ff84111561274757612747612658565b50506001821b6106a6565b5060208310610133831016604e8410600b8410161715612775575081810a6106a6565b61277f83836126b7565b806000190482111561279357612793612658565b029392505050565b600061071a83836126fa565b80820281158282048414176106a6576106a6612658565b6000826127db57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156106a6576106a6612658565b600061071a60ff8416836126fa565b6000808585111561281257600080fd5b8386111561281f57600080fd5b5050820193919092039150565b6001600160e01b031981358181169160048510156128545780818660040360031b1b83161692505b505092915050565b6001600160a01b038416815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b6000600182016128ad576128ad612658565b5060010190565b6000825160005b818110156128d557602081860181015185830152016128bb565b506000920191825250919050565b600080604083850312156128f657600080fd5b6128ff8361260f565b9150602083015163ffffffff811681146125c257600080fd5b634e487b7160e01b600052603260045260246000fdfea164736f6c6343000814000a";

type CXBTokenPurchaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CXBTokenPurchaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CXBTokenPurchase__factory extends ContractFactory {
  constructor(...args: CXBTokenPurchaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token: AddressLike,
    _chainlink: AddressLike,
    _native: BigNumberish,
    _bonus: BigNumberish,
    initialAuthority: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _token,
      _chainlink,
      _native,
      _bonus,
      initialAuthority,
      overrides || {}
    );
  }
  override deploy(
    _token: AddressLike,
    _chainlink: AddressLike,
    _native: BigNumberish,
    _bonus: BigNumberish,
    initialAuthority: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _token,
      _chainlink,
      _native,
      _bonus,
      initialAuthority,
      overrides || {}
    ) as Promise<
      CXBTokenPurchase & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CXBTokenPurchase__factory {
    return super.connect(runner) as CXBTokenPurchase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CXBTokenPurchaseInterface {
    return new Interface(_abi) as CXBTokenPurchaseInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CXBTokenPurchase {
    return new Contract(address, _abi, runner) as unknown as CXBTokenPurchase;
  }
}
